#include"lex.h" 
#include<map> 
#include<string> 
#include<iostream> 
#include<fstream> 

using namespace std;

map<Input, Result> M; //Таблица переходов КА
//Функция-помощник, удаляет пробелы в конце и начале строки.

string trim(const string &str) // Принимает на вход строку
{
	string::const_iterator it1 = str.begin();
	//Итераторit1 указывает на начало строки
	string::const_iterator it2 = str.end();
	//Итераторit2 указывает на конец строки
	while (it1 != str.end() && *it1 == ' ') it1++;
	//Пока пробел и не конец строки, сдвигаем итераторы
	while (it2 != str.begin() && *it2 == ' ') it2--;
	return string(it1, it2); // Создаем строку на основе2 итераторов, указывающих на начало и конец строки без пробелов
}

void Init(void)
{
	// Заполнение таблицы
	M.insert(Item(Input(S0, ' '), Result(S0, O0)));
	M.insert(Item(Input(S0, 'a'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'b'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'c'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'd'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'e'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'f'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'g'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'h'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'i'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'j'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'k'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'l'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'm'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'n'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'o'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'p'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'q'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'r'), Result(S1, O1)));
	M.insert(Item(Input(S0, 's'), Result(S1, O1)));
	M.insert(Item(Input(S0, 't'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'u'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'v'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'w'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'x'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'y'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'z'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'A'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'B'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'C'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'D'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'E'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'F'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'G'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'H'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'I'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'J'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'K'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'L'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'M'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'N'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'O'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'P'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'Q'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'R'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'S'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'T'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'U'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'V'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'W'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'X'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'Y'), Result(S1, O1)));
	M.insert(Item(Input(S0, 'Z'), Result(S1, O1)));
	M.insert(Item(Input(S0, '0'), Result(S2, O2)));
	M.insert(Item(Input(S0, '1'), Result(S2, O2)));
	M.insert(Item(Input(S0, '2'), Result(S2, O2)));
	M.insert(Item(Input(S0, '3'), Result(S2, O2)));
	M.insert(Item(Input(S0, '4'), Result(S2, O2)));
	M.insert(Item(Input(S0, '5'), Result(S2, O2)));
	M.insert(Item(Input(S0, '6'), Result(S2, O2)));
	M.insert(Item(Input(S0, '7'), Result(S2, O2)));
	M.insert(Item(Input(S0, '8'), Result(S2, O2)));
	M.insert(Item(Input(S0, '9'), Result(S2, O2)));
	M.insert(Item(Input(S0, '+'), Result(S4, O4)));
	M.insert(Item(Input(S0, '-'), Result(S5, O5)));
	M.insert(Item(Input(S0, '*'), Result(S6, O6)));
	M.insert(Item(Input(S0, '/'), Result(S8, O8)));
	M.insert(Item(Input(S0, '='), Result(S10, O10)));
	M.insert(Item(Input(S0, '<'), Result(S12, O12)));
	M.insert(Item(Input(S0, '>'), Result(S14, O14)));
	M.insert(Item(Input(S0, ','), Result(S16, O16)));
	M.insert(Item(Input(S0, '\n'), Result(S17, O17)));
	M.insert(Item(Input(S0, ';'), Result(S17, O17)));
	M.insert(Item(Input(S0, ':'), Result(S18, O18)));
	M.insert(Item(Input(S0, '('), Result(S19, O19)));
	M.insert(Item(Input(S0, ')'), Result(S20, O20)));
	M.insert(Item(Input(S0, '.'), Result(S21, O21)));
	
	
	
	M.insert(Item(Input(S1, '_'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'a'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'b'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'c'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'd'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'e'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'f'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'g'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'h'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'i'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'j'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'k'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'l'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'm'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'n'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'o'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'p'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'q'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'r'), Result(S1, O1)));
	M.insert(Item(Input(S1, 's'), Result(S1, O1)));
	M.insert(Item(Input(S1, 't'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'u'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'v'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'w'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'x'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'y'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'z'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'A'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'B'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'C'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'D'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'E'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'F'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'G'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'H'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'I'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'J'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'K'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'L'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'M'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'N'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'O'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'P'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'Q'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'R'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'S'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'T'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'U'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'V'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'W'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'X'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'Y'), Result(S1, O1)));
	M.insert(Item(Input(S1, 'Z'), Result(S1, O1)));
	M.insert(Item(Input(S1, '0'), Result(S1, O1)));
	M.insert(Item(Input(S1, '1'), Result(S1, O1)));
	M.insert(Item(Input(S1, '2'), Result(S1, O1)));
	M.insert(Item(Input(S1, '3'), Result(S1, O1)));
	M.insert(Item(Input(S1, '4'), Result(S1, O1)));
	M.insert(Item(Input(S1, '5'), Result(S1, O1)));
	M.insert(Item(Input(S1, '6'), Result(S1, O1)));
	M.insert(Item(Input(S1, '7'), Result(S1, O1)));
	M.insert(Item(Input(S1, '8'), Result(S1, O1)));
	M.insert(Item(Input(S1, '9'), Result(S1, O1)));
	M.insert(Item(Input(S1, '+'), Result(SE, O1)));
	M.insert(Item(Input(S1, ' '), Result(SE, O1)));
	M.insert(Item(Input(S1, '\n'), Result(SE, O1)));
	M.insert(Item(Input(S1, '*'), Result(SE, O1)));
	M.insert(Item(Input(S1, '-'), Result(SE, O1)));
	M.insert(Item(Input(S1, '/'), Result(SE, O1)));
	M.insert(Item(Input(S1, '='), Result(SE, O1)));
	M.insert(Item(Input(S1, '<'), Result(SE, O1)));
	M.insert(Item(Input(S1, '>'), Result(SE, O1)));
	M.insert(Item(Input(S1, ','), Result(SE, O1)));
	M.insert(Item(Input(S1, ';'), Result(SE, O1)));
	M.insert(Item(Input(S1, ':'), Result(SE, O1)));
	M.insert(Item(Input(S1, '('), Result(SE, O1)));
	M.insert(Item(Input(S1, ')'), Result(SE, O1)));

	M.insert(Item(Input(S2, '0'), Result(S2, O2)));
	M.insert(Item(Input(S2, '1'), Result(S2, O2)));
	M.insert(Item(Input(S2, '2'), Result(S2, O2)));
	M.insert(Item(Input(S2, '3'), Result(S2, O2)));
	M.insert(Item(Input(S2, '4'), Result(S2, O2)));
	M.insert(Item(Input(S2, '5'), Result(S2, O2)));
	M.insert(Item(Input(S2, '6'), Result(S2, O2)));
	M.insert(Item(Input(S2, '7'), Result(S2, O2)));
	M.insert(Item(Input(S2, '8'), Result(S2, O2)));
	M.insert(Item(Input(S2, '9'), Result(S2, O2)));
	M.insert(Item(Input(S2, '.'), Result(S3, O3)));
	M.insert(Item(Input(S2, ' '), Result(SE, O2)));
	M.insert(Item(Input(S2, '\n'), Result(SE, O2)));
	M.insert(Item(Input(S2, '*'), Result(SE, O2)));
	M.insert(Item(Input(S2, '-'), Result(SE, O2)));
	M.insert(Item(Input(S2, '+'), Result(SE, O2)));
	M.insert(Item(Input(S2, '/'), Result(SE, O2)));
	M.insert(Item(Input(S2, '='), Result(SE, O2)));
	M.insert(Item(Input(S2, '<'), Result(SE, O2)));
	M.insert(Item(Input(S2, '>'), Result(SE, O2)));
	M.insert(Item(Input(S2, ','), Result(SE, O2)));
	M.insert(Item(Input(S2, ';'), Result(SE, O2)));
	M.insert(Item(Input(S2, ':'), Result(SE, O2)));
	M.insert(Item(Input(S2, '('), Result(SE, O2)));
	M.insert(Item(Input(S2, ')'), Result(SE, O2)));


	M.insert(Item(Input(S3, '0'), Result(S3, O3)));
	M.insert(Item(Input(S3, '1'), Result(S3, O3)));
	M.insert(Item(Input(S3, '2'), Result(S3, O3)));
	M.insert(Item(Input(S3, '3'), Result(S3, O3)));
	M.insert(Item(Input(S3, '4'), Result(S3, O3)));
	M.insert(Item(Input(S3, '5'), Result(S3, O3)));
	M.insert(Item(Input(S3, '6'), Result(S3, O3)));
	M.insert(Item(Input(S3, '7'), Result(S3, O3)));
	M.insert(Item(Input(S3, '8'), Result(S3, O3)));
	M.insert(Item(Input(S3, '9'), Result(S3, O3)));
	M.insert(Item(Input(S3, ' '), Result(SE, O3)));
	M.insert(Item(Input(S3, '\n'), Result(SE, O3)));
	M.insert(Item(Input(S3, '*'), Result(SE, O3)));
	M.insert(Item(Input(S3, '-'), Result(SE, O3)));
	M.insert(Item(Input(S3, '+'), Result(SE, O3)));
	M.insert(Item(Input(S3, '/'), Result(SE, O3)));
	M.insert(Item(Input(S3, '='), Result(SE, O3)));
	M.insert(Item(Input(S3, '<'), Result(SE, O3)));
	M.insert(Item(Input(S3, '>'), Result(SE, O3)));
	M.insert(Item(Input(S3, ','), Result(SE, O3)));
	M.insert(Item(Input(S3, ';'), Result(SE, O3)));
	M.insert(Item(Input(S3, ':'), Result(SE, O3)));
	M.insert(Item(Input(S3, '('), Result(SE, O3)));
	M.insert(Item(Input(S3, ')'), Result(SE, O3)));

	M.insert(Item(Input(S4, 'a'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'b'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'c'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'd'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'e'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'f'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'g'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'h'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'i'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'j'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'k'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'l'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'm'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'n'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'o'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'p'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'q'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'r'), Result(SE, O4)));
	M.insert(Item(Input(S4, 's'), Result(SE, O4)));
	M.insert(Item(Input(S4, 't'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'u'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'v'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'w'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'x'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'y'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'z'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'A'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'B'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'C'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'D'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'E'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'F'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'G'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'H'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'I'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'J'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'K'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'L'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'M'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'N'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'O'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'P'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'Q'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'R'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'S'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'T'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'U'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'V'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'W'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'X'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'Y'), Result(SE, O4)));
	M.insert(Item(Input(S4, 'Z'), Result(SE, O4)));
	M.insert(Item(Input(S4, '0'), Result(SE, O4)));
	M.insert(Item(Input(S4, '1'), Result(SE, O4)));
	M.insert(Item(Input(S4, '2'), Result(SE, O4)));
	M.insert(Item(Input(S4, '3'), Result(SE, O4)));
	M.insert(Item(Input(S4, '4'), Result(SE, O4)));
	M.insert(Item(Input(S4, '5'), Result(SE, O4)));
	M.insert(Item(Input(S4, '6'), Result(SE, O4)));
	M.insert(Item(Input(S4, '7'), Result(SE, O4)));
	M.insert(Item(Input(S4, '8'), Result(SE, O4)));
	M.insert(Item(Input(S4, '9'), Result(SE, O4)));
	M.insert(Item(Input(S4, ' '), Result(SE, O4)));
	M.insert(Item(Input(S4, '\n'), Result(SE, O4)));
	M.insert(Item(Input(S4, '*'), Result(SE, O4)));
	M.insert(Item(Input(S4, '-'), Result(SE, O4)));
	M.insert(Item(Input(S4, '+'), Result(SE, O4)));
	M.insert(Item(Input(S4, '/'), Result(SE, O4)));
	M.insert(Item(Input(S4, '='), Result(SE, O4)));
	M.insert(Item(Input(S4, '<'), Result(SE, O4)));
	M.insert(Item(Input(S4, '>'), Result(SE, O4)));
	M.insert(Item(Input(S4, ','), Result(SE, O4)));
	M.insert(Item(Input(S4, ';'), Result(SE, O4)));
	M.insert(Item(Input(S4, ':'), Result(SE, O4)));
	M.insert(Item(Input(S4, '('), Result(SE, O4)));
	M.insert(Item(Input(S4, ')'), Result(SE, O4)));

	M.insert(Item(Input(S5, 'a'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'b'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'c'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'd'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'e'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'f'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'g'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'h'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'i'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'j'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'k'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'l'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'm'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'n'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'o'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'p'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'q'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'r'), Result(SE, O5)));
	M.insert(Item(Input(S5, 's'), Result(SE, O5)));
	M.insert(Item(Input(S5, 't'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'u'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'v'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'w'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'x'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'y'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'z'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'A'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'B'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'C'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'D'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'E'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'F'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'G'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'H'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'I'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'J'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'K'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'L'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'M'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'N'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'O'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'P'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'Q'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'R'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'S'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'T'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'U'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'V'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'W'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'X'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'Y'), Result(SE, O5)));
	M.insert(Item(Input(S5, 'Z'), Result(SE, O5)));
	M.insert(Item(Input(S5, '0'), Result(SE, O5)));
	M.insert(Item(Input(S5, '1'), Result(SE, O5)));
	M.insert(Item(Input(S5, '2'), Result(SE, O5)));
	M.insert(Item(Input(S5, '3'), Result(SE, O5)));
	M.insert(Item(Input(S5, '4'), Result(SE, O5)));
	M.insert(Item(Input(S5, '5'), Result(SE, O5)));
	M.insert(Item(Input(S5, '6'), Result(SE, O5)));
	M.insert(Item(Input(S5, '7'), Result(SE, O5)));
	M.insert(Item(Input(S5, '8'), Result(SE, O5)));
	M.insert(Item(Input(S5, '9'), Result(SE, O5)));
	M.insert(Item(Input(S5, ' '), Result(SE, O5)));
	M.insert(Item(Input(S5, '\n'), Result(SE, O5)));
	M.insert(Item(Input(S5, '*'), Result(SE, O5)));
	M.insert(Item(Input(S5, '-'), Result(SE, O5)));
	M.insert(Item(Input(S5, '+'), Result(SE, O5)));
	M.insert(Item(Input(S5, '/'), Result(SE, O5)));
	M.insert(Item(Input(S5, '='), Result(SE, O5)));
	M.insert(Item(Input(S5, '<'), Result(SE, O5)));
	M.insert(Item(Input(S5, '>'), Result(SE, O5)));
	M.insert(Item(Input(S5, ','), Result(SE, O5)));
	M.insert(Item(Input(S5, ';'), Result(SE, O5)));
	M.insert(Item(Input(S5, ':'), Result(SE, O5)));
	M.insert(Item(Input(S5, '('), Result(SE, O5)));
	M.insert(Item(Input(S5, ')'), Result(SE, O5)));

	M.insert(Item(Input(S6, 'a'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'b'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'c'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'd'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'e'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'f'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'g'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'h'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'i'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'j'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'k'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'l'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'm'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'n'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'o'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'p'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'q'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'r'), Result(SE, O6)));
	M.insert(Item(Input(S6, 's'), Result(SE, O6)));
	M.insert(Item(Input(S6, 't'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'u'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'v'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'w'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'x'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'y'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'z'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'A'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'B'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'C'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'D'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'E'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'F'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'G'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'H'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'I'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'J'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'K'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'L'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'M'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'N'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'O'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'P'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'Q'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'R'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'S'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'T'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'U'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'V'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'W'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'X'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'Y'), Result(SE, O6)));
	M.insert(Item(Input(S6, 'Z'), Result(SE, O6)));
	M.insert(Item(Input(S6, '0'), Result(SE, O6)));
	M.insert(Item(Input(S6, '1'), Result(SE, O6)));
	M.insert(Item(Input(S6, '2'), Result(SE, O6)));
	M.insert(Item(Input(S6, '3'), Result(SE, O6)));
	M.insert(Item(Input(S6, '4'), Result(SE, O6)));
	M.insert(Item(Input(S6, '5'), Result(SE, O6)));
	M.insert(Item(Input(S6, '6'), Result(SE, O6)));
	M.insert(Item(Input(S6, '7'), Result(SE, O6)));
	M.insert(Item(Input(S6, '8'), Result(SE, O6)));
	M.insert(Item(Input(S6, '9'), Result(SE, O6)));
	M.insert(Item(Input(S6, '*'), Result(S7, O7)));
	M.insert(Item(Input(S6, ' '), Result(SE, O6)));
	M.insert(Item(Input(S6, '\n'), Result(SE, O6)));
	M.insert(Item(Input(S6, '-'), Result(SE, O6)));
	M.insert(Item(Input(S6, '+'), Result(SE, O6)));
	M.insert(Item(Input(S6, '/'), Result(SE, O6)));
	M.insert(Item(Input(S6, '='), Result(SE, O6)));
	M.insert(Item(Input(S6, '<'), Result(SE, O6)));
	M.insert(Item(Input(S6, '>'), Result(SE, O6)));
	M.insert(Item(Input(S6, ','), Result(SE, O6)));
	M.insert(Item(Input(S6, ';'), Result(SE, O6)));
	M.insert(Item(Input(S6, ':'), Result(SE, O6)));
	M.insert(Item(Input(S6, '('), Result(SE, O6)));
	M.insert(Item(Input(S6, ')'), Result(SE, O6)));

	M.insert(Item(Input(S7, 'a'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'b'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'c'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'd'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'e'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'f'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'g'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'h'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'i'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'j'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'k'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'l'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'm'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'n'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'o'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'p'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'q'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'r'), Result(SE, O7)));
	M.insert(Item(Input(S7, 's'), Result(SE, O7)));
	M.insert(Item(Input(S7, 't'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'u'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'v'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'w'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'x'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'y'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'z'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'A'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'B'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'C'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'D'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'E'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'F'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'G'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'H'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'I'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'J'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'K'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'L'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'M'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'N'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'O'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'P'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'Q'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'R'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'S'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'T'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'U'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'V'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'W'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'X'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'Y'), Result(SE, O7)));
	M.insert(Item(Input(S7, 'Z'), Result(SE, O7)));
	M.insert(Item(Input(S7, '0'), Result(SE, O7)));
	M.insert(Item(Input(S7, '1'), Result(SE, O7)));
	M.insert(Item(Input(S7, '2'), Result(SE, O7)));
	M.insert(Item(Input(S7, '3'), Result(SE, O7)));
	M.insert(Item(Input(S7, '4'), Result(SE, O7)));
	M.insert(Item(Input(S7, '5'), Result(SE, O7)));
	M.insert(Item(Input(S7, '6'), Result(SE, O7)));
	M.insert(Item(Input(S7, '7'), Result(SE, O7)));
	M.insert(Item(Input(S7, '8'), Result(SE, O7)));
	M.insert(Item(Input(S7, '9'), Result(SE, O7)));
	M.insert(Item(Input(S7, ' '), Result(SE, O7)));
	M.insert(Item(Input(S7, '\n'), Result(SE, O7)));
	M.insert(Item(Input(S7, '*'), Result(SE, O7)));
	M.insert(Item(Input(S7, '-'), Result(SE, O7)));
	M.insert(Item(Input(S7, '+'), Result(SE, O7)));
	M.insert(Item(Input(S7, '/'), Result(SE, O7)));
	M.insert(Item(Input(S7, '='), Result(SE, O7)));
	M.insert(Item(Input(S7, '<'), Result(SE, O7)));
	M.insert(Item(Input(S7, '>'), Result(SE, O7)));
	M.insert(Item(Input(S7, ','), Result(SE, O7)));
	M.insert(Item(Input(S7, ';'), Result(SE, O7)));
	M.insert(Item(Input(S7, ':'), Result(SE, O7)));
	M.insert(Item(Input(S7, '('), Result(SE, O7)));
	M.insert(Item(Input(S7, ')'), Result(SE, O7)));

	M.insert(Item(Input(S8, 'a'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'b'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'c'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'd'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'e'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'f'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'g'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'h'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'i'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'j'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'k'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'l'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'm'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'n'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'o'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'p'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'q'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'r'), Result(SE, O8)));
	M.insert(Item(Input(S8, 's'), Result(SE, O8)));
	M.insert(Item(Input(S8, 't'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'u'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'v'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'w'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'x'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'y'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'z'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'A'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'B'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'C'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'D'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'E'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'F'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'G'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'H'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'I'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'J'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'K'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'L'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'M'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'N'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'O'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'P'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'Q'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'R'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'S'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'T'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'U'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'V'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'W'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'X'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'Y'), Result(SE, O8)));
	M.insert(Item(Input(S8, 'Z'), Result(SE, O8)));
	M.insert(Item(Input(S8, '0'), Result(SE, O8)));
	M.insert(Item(Input(S8, '1'), Result(SE, O8)));
	M.insert(Item(Input(S8, '2'), Result(SE, O8)));
	M.insert(Item(Input(S8, '3'), Result(SE, O8)));
	M.insert(Item(Input(S8, '4'), Result(SE, O8)));
	M.insert(Item(Input(S8, '5'), Result(SE, O8)));
	M.insert(Item(Input(S8, '6'), Result(SE, O8)));
	M.insert(Item(Input(S8, '7'), Result(SE, O8)));
	M.insert(Item(Input(S8, '8'), Result(SE, O8)));
	M.insert(Item(Input(S8, '9'), Result(SE, O8)));
	M.insert(Item(Input(S8, '='), Result(S9, O9)));
	M.insert(Item(Input(S8, ' '), Result(SE, O8)));
	M.insert(Item(Input(S8, '\n'), Result(SE, O8)));
	M.insert(Item(Input(S8, '*'), Result(SE, O8)));
	M.insert(Item(Input(S8, '-'), Result(SE, O8)));
	M.insert(Item(Input(S8, '+'), Result(SE, O8)));
	M.insert(Item(Input(S8, '/'), Result(SE, O8)));
	M.insert(Item(Input(S8, '<'), Result(SE, O8)));
	M.insert(Item(Input(S8, '>'), Result(SE, O8)));
	M.insert(Item(Input(S8, ','), Result(SE, O8)));
	M.insert(Item(Input(S8, ';'), Result(SE, O8)));
	M.insert(Item(Input(S8, ':'), Result(SE, O8)));
	M.insert(Item(Input(S8, '('), Result(SE, O8)));
	M.insert(Item(Input(S8, ')'), Result(SE, O8)));

	M.insert(Item(Input(S9, 'a'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'b'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'c'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'd'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'e'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'f'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'g'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'h'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'i'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'j'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'k'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'l'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'm'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'n'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'o'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'p'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'q'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'r'), Result(SE, O9)));
	M.insert(Item(Input(S9, 's'), Result(SE, O9)));
	M.insert(Item(Input(S9, 't'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'u'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'v'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'w'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'x'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'y'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'z'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'A'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'B'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'C'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'D'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'E'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'F'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'G'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'H'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'I'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'J'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'K'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'L'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'M'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'N'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'O'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'P'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'Q'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'R'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'S'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'T'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'U'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'V'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'W'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'X'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'Y'), Result(SE, O9)));
	M.insert(Item(Input(S9, 'Z'), Result(SE, O9)));
	M.insert(Item(Input(S9, '0'), Result(SE, O9)));
	M.insert(Item(Input(S9, '1'), Result(SE, O9)));
	M.insert(Item(Input(S9, '2'), Result(SE, O9)));
	M.insert(Item(Input(S9, '3'), Result(SE, O9)));
	M.insert(Item(Input(S9, '4'), Result(SE, O9)));
	M.insert(Item(Input(S9, '5'), Result(SE, O9)));
	M.insert(Item(Input(S9, '6'), Result(SE, O9)));
	M.insert(Item(Input(S9, '7'), Result(SE, O9)));
	M.insert(Item(Input(S9, '8'), Result(SE, O9)));
	M.insert(Item(Input(S9, '9'), Result(SE, O9)));
	M.insert(Item(Input(S9, ' '), Result(SE, O9)));
	M.insert(Item(Input(S9, '\n'), Result(SE, O9)));
	M.insert(Item(Input(S9, '*'), Result(SE, O9)));
	M.insert(Item(Input(S9, '-'), Result(SE, O9)));
	M.insert(Item(Input(S9, '+'), Result(SE, O9)));
	M.insert(Item(Input(S9, '/'), Result(SE, O9)));
	M.insert(Item(Input(S9, '='), Result(SE, O9)));
	M.insert(Item(Input(S9, '<'), Result(SE, O9)));
	M.insert(Item(Input(S9, '>'), Result(SE, O9)));
	M.insert(Item(Input(S9, ','), Result(SE, O9)));
	M.insert(Item(Input(S9, ';'), Result(SE, O9)));
	M.insert(Item(Input(S9, ':'), Result(SE, O9)));
	M.insert(Item(Input(S9, '('), Result(SE, O9)));
	M.insert(Item(Input(S9, ')'), Result(SE, O9)));

	M.insert(Item(Input(S10, 'a'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'b'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'c'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'd'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'e'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'f'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'g'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'h'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'i'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'j'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'k'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'l'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'm'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'n'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'o'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'p'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'q'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'r'), Result(SE, O10)));
	M.insert(Item(Input(S10, 's'), Result(SE, O10)));
	M.insert(Item(Input(S10, 't'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'u'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'v'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'w'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'x'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'y'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'z'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'A'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'B'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'C'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'D'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'E'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'F'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'G'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'H'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'I'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'J'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'K'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'L'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'M'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'N'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'O'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'P'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'Q'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'R'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'S'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'T'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'U'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'V'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'W'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'X'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'Y'), Result(SE, O10)));
	M.insert(Item(Input(S10, 'Z'), Result(SE, O10)));
	M.insert(Item(Input(S10, '0'), Result(SE, O10)));
	M.insert(Item(Input(S10, '1'), Result(SE, O10)));
	M.insert(Item(Input(S10, '2'), Result(SE, O10)));
	M.insert(Item(Input(S10, '3'), Result(SE, O10)));
	M.insert(Item(Input(S10, '4'), Result(SE, O10)));
	M.insert(Item(Input(S10, '5'), Result(SE, O10)));
	M.insert(Item(Input(S10, '6'), Result(SE, O10)));
	M.insert(Item(Input(S10, '7'), Result(SE, O10)));
	M.insert(Item(Input(S10, '8'), Result(SE, O10)));
	M.insert(Item(Input(S10, '9'), Result(SE, O10)));
	M.insert(Item(Input(S10, '='), Result(S11, O11)));
	M.insert(Item(Input(S10, ' '), Result(SE, O10)));
	M.insert(Item(Input(S10, '\n'), Result(SE, O10)));
	M.insert(Item(Input(S10, '*'), Result(SE, O10)));
	M.insert(Item(Input(S10, '-'), Result(SE, O10)));
	M.insert(Item(Input(S10, '+'), Result(SE, O10)));
	M.insert(Item(Input(S10, '/'), Result(SE, O10)));
	M.insert(Item(Input(S10, '<'), Result(SE, O10)));
	M.insert(Item(Input(S10, '>'), Result(SE, O10)));
	M.insert(Item(Input(S10, ','), Result(SE, O10)));
	M.insert(Item(Input(S10, ';'), Result(SE, O10)));
	M.insert(Item(Input(S10, ':'), Result(SE, O10)));
	M.insert(Item(Input(S10, '('), Result(SE, O10)));
	M.insert(Item(Input(S10, ')'), Result(SE, O10)));

	M.insert(Item(Input(S11, 'a'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'b'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'c'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'd'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'e'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'f'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'g'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'h'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'i'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'j'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'k'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'l'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'm'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'n'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'o'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'p'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'q'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'r'), Result(SE, O11)));
	M.insert(Item(Input(S11, 's'), Result(SE, O11)));
	M.insert(Item(Input(S11, 't'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'u'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'v'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'w'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'x'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'y'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'z'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'A'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'B'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'C'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'D'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'E'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'F'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'G'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'H'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'I'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'J'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'K'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'L'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'M'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'N'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'O'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'P'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'Q'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'R'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'S'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'T'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'U'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'V'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'W'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'X'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'Y'), Result(SE, O11)));
	M.insert(Item(Input(S11, 'Z'), Result(SE, O11)));
	M.insert(Item(Input(S11, '0'), Result(SE, O11)));
	M.insert(Item(Input(S11, '1'), Result(SE, O11)));
	M.insert(Item(Input(S11, '2'), Result(SE, O11)));
	M.insert(Item(Input(S11, '3'), Result(SE, O11)));
	M.insert(Item(Input(S11, '4'), Result(SE, O11)));
	M.insert(Item(Input(S11, '5'), Result(SE, O11)));
	M.insert(Item(Input(S11, '6'), Result(SE, O11)));
	M.insert(Item(Input(S11, '7'), Result(SE, O11)));
	M.insert(Item(Input(S11, '8'), Result(SE, O11)));
	M.insert(Item(Input(S11, '9'), Result(SE, O11)));
	M.insert(Item(Input(S11, ' '), Result(SE, O11)));
	M.insert(Item(Input(S11, '\n'), Result(SE, O11)));
	M.insert(Item(Input(S11, '*'), Result(SE, O11)));
	M.insert(Item(Input(S11, '-'), Result(SE, O11)));
	M.insert(Item(Input(S11, '+'), Result(SE, O11)));
	M.insert(Item(Input(S11, '/'), Result(SE, O11)));
	M.insert(Item(Input(S11, '='), Result(SE, O11)));
	M.insert(Item(Input(S11, '<'), Result(SE, O11)));
	M.insert(Item(Input(S11, '>'), Result(SE, O11)));
	M.insert(Item(Input(S11, ','), Result(SE, O11)));
	M.insert(Item(Input(S11, ';'), Result(SE, O11)));
	M.insert(Item(Input(S11, ':'), Result(SE, O11)));
	M.insert(Item(Input(S11, '('), Result(SE, O11)));
	M.insert(Item(Input(S11, ')'), Result(SE, O11)));

	M.insert(Item(Input(S12, 'a'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'b'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'c'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'd'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'e'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'f'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'g'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'h'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'i'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'j'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'k'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'l'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'm'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'n'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'o'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'p'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'q'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'r'), Result(SE, O12)));
	M.insert(Item(Input(S12, 's'), Result(SE, O12)));
	M.insert(Item(Input(S12, 't'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'u'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'v'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'w'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'x'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'y'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'z'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'A'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'B'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'C'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'D'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'E'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'F'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'G'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'H'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'I'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'J'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'K'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'L'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'M'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'N'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'O'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'P'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'Q'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'R'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'S'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'T'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'U'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'V'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'W'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'X'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'Y'), Result(SE, O12)));
	M.insert(Item(Input(S12, 'Z'), Result(SE, O12)));
	M.insert(Item(Input(S12, '0'), Result(SE, O12)));
	M.insert(Item(Input(S12, '1'), Result(SE, O12)));
	M.insert(Item(Input(S12, '2'), Result(SE, O12)));
	M.insert(Item(Input(S12, '3'), Result(SE, O12)));
	M.insert(Item(Input(S12, '4'), Result(SE, O12)));
	M.insert(Item(Input(S12, '5'), Result(SE, O12)));
	M.insert(Item(Input(S12, '6'), Result(SE, O12)));
	M.insert(Item(Input(S12, '7'), Result(SE, O12)));
	M.insert(Item(Input(S12, '8'), Result(SE, O12)));
	M.insert(Item(Input(S12, '9'), Result(SE, O12)));
	M.insert(Item(Input(S12, '='), Result(S13, O13)));
	M.insert(Item(Input(S12, ' '), Result(SE, O12)));
	M.insert(Item(Input(S12, '\n'), Result(SE, O12)));
	M.insert(Item(Input(S12, '*'), Result(SE, O12)));
	M.insert(Item(Input(S12, '-'), Result(SE, O12)));
	M.insert(Item(Input(S12, '+'), Result(SE, O12)));
	M.insert(Item(Input(S12, '/'), Result(SE, O12)));
	M.insert(Item(Input(S12, '<'), Result(SE, O12)));
	M.insert(Item(Input(S12, '>'), Result(SE, O12)));
	M.insert(Item(Input(S12, ','), Result(SE, O12)));
	M.insert(Item(Input(S12, ';'), Result(SE, O12)));
	M.insert(Item(Input(S12, ':'), Result(SE, O12)));
	M.insert(Item(Input(S12, '('), Result(SE, O12)));
	M.insert(Item(Input(S12, ')'), Result(SE, O12)));
	
	M.insert(Item(Input(S13, 'a'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'b'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'c'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'd'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'e'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'f'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'g'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'h'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'i'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'j'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'k'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'l'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'm'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'n'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'o'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'p'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'q'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'r'), Result(SE, O13)));
	M.insert(Item(Input(S13, 's'), Result(SE, O13)));
	M.insert(Item(Input(S13, 't'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'u'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'v'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'w'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'x'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'y'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'z'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'A'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'B'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'C'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'D'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'E'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'F'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'G'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'H'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'I'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'J'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'K'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'L'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'M'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'N'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'O'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'P'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'Q'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'R'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'S'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'T'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'U'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'V'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'W'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'X'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'Y'), Result(SE, O13)));
	M.insert(Item(Input(S13, 'Z'), Result(SE, O13)));
	M.insert(Item(Input(S13, '0'), Result(SE, O13)));
	M.insert(Item(Input(S13, '1'), Result(SE, O13)));
	M.insert(Item(Input(S13, '2'), Result(SE, O13)));
	M.insert(Item(Input(S13, '3'), Result(SE, O13)));
	M.insert(Item(Input(S13, '4'), Result(SE, O13)));
	M.insert(Item(Input(S13, '5'), Result(SE, O13)));
	M.insert(Item(Input(S13, '6'), Result(SE, O13)));
	M.insert(Item(Input(S13, '7'), Result(SE, O13)));
	M.insert(Item(Input(S13, '8'), Result(SE, O13)));
	M.insert(Item(Input(S13, '9'), Result(SE, O13)));
	M.insert(Item(Input(S13, ' '), Result(SE, O13)));
	M.insert(Item(Input(S13, '\n'), Result(SE, O13)));
	M.insert(Item(Input(S13, '*'), Result(SE, O13)));
	M.insert(Item(Input(S13, '-'), Result(SE, O13)));
	M.insert(Item(Input(S13, '+'), Result(SE, O13)));
	M.insert(Item(Input(S13, '/'), Result(SE, O13)));
	M.insert(Item(Input(S13, '='), Result(SE, O13)));
	M.insert(Item(Input(S13, '<'), Result(SE, O13)));
	M.insert(Item(Input(S13, '>'), Result(SE, O13)));
	M.insert(Item(Input(S13, ','), Result(SE, O13)));
	M.insert(Item(Input(S13, ';'), Result(SE, O13)));
	M.insert(Item(Input(S13, ':'), Result(SE, O13)));
	M.insert(Item(Input(S13, '('), Result(SE, O13)));
	M.insert(Item(Input(S13, ')'), Result(SE, O13)));

	M.insert(Item(Input(S14, 'a'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'b'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'c'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'd'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'e'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'f'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'g'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'h'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'i'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'j'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'k'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'l'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'm'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'n'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'o'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'p'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'q'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'r'), Result(SE, O14)));
	M.insert(Item(Input(S14, 's'), Result(SE, O14)));
	M.insert(Item(Input(S14, 't'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'u'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'v'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'w'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'x'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'y'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'z'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'A'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'B'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'C'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'D'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'E'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'F'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'G'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'H'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'I'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'J'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'K'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'L'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'M'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'N'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'O'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'P'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'Q'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'R'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'S'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'T'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'U'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'V'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'W'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'X'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'Y'), Result(SE, O14)));
	M.insert(Item(Input(S14, 'Z'), Result(SE, O14)));
	M.insert(Item(Input(S14, '0'), Result(SE, O14)));
	M.insert(Item(Input(S14, '1'), Result(SE, O14)));
	M.insert(Item(Input(S14, '2'), Result(SE, O14)));
	M.insert(Item(Input(S14, '3'), Result(SE, O14)));
	M.insert(Item(Input(S14, '4'), Result(SE, O14)));
	M.insert(Item(Input(S14, '5'), Result(SE, O14)));
	M.insert(Item(Input(S14, '6'), Result(SE, O14)));
	M.insert(Item(Input(S14, '7'), Result(SE, O14)));
	M.insert(Item(Input(S14, '8'), Result(SE, O14)));
	M.insert(Item(Input(S14, '9'), Result(SE, O14)));
	M.insert(Item(Input(S14, '='), Result(S15, O15)));
	M.insert(Item(Input(S14, ' '), Result(SE, O14)));
	M.insert(Item(Input(S14, '\n'), Result(SE, O14)));
	M.insert(Item(Input(S14, '*'), Result(SE, O14)));
	M.insert(Item(Input(S14, '-'), Result(SE, O14)));
	M.insert(Item(Input(S14, '+'), Result(SE, O14)));
	M.insert(Item(Input(S14, '/'), Result(SE, O14)));
	M.insert(Item(Input(S14, '<'), Result(SE, O14)));
	M.insert(Item(Input(S14, '>'), Result(SE, O14)));
	M.insert(Item(Input(S14, ','), Result(SE, O14)));
	M.insert(Item(Input(S14, ';'), Result(SE, O14)));
	M.insert(Item(Input(S14, ':'), Result(SE, O14)));
	M.insert(Item(Input(S14, '('), Result(SE, O14)));
	M.insert(Item(Input(S14, ')'), Result(SE, O14)));

	M.insert(Item(Input(S15, 'a'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'b'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'c'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'd'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'e'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'f'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'g'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'h'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'i'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'j'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'k'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'l'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'm'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'n'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'o'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'p'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'q'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'r'), Result(SE, O15)));
	M.insert(Item(Input(S15, 's'), Result(SE, O15)));
	M.insert(Item(Input(S15, 't'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'u'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'v'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'w'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'x'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'y'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'z'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'A'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'B'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'C'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'D'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'E'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'F'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'G'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'H'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'I'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'J'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'K'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'L'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'M'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'N'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'O'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'P'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'Q'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'R'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'S'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'T'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'U'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'V'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'W'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'X'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'Y'), Result(SE, O15)));
	M.insert(Item(Input(S15, 'Z'), Result(SE, O15)));
	M.insert(Item(Input(S15, '0'), Result(SE, O15)));
	M.insert(Item(Input(S15, '1'), Result(SE, O15)));
	M.insert(Item(Input(S15, '2'), Result(SE, O15)));
	M.insert(Item(Input(S15, '3'), Result(SE, O15)));
	M.insert(Item(Input(S15, '4'), Result(SE, O15)));
	M.insert(Item(Input(S15, '5'), Result(SE, O15)));
	M.insert(Item(Input(S15, '6'), Result(SE, O15)));
	M.insert(Item(Input(S15, '7'), Result(SE, O15)));
	M.insert(Item(Input(S15, '8'), Result(SE, O15)));
	M.insert(Item(Input(S15, '9'), Result(SE, O15)));
	M.insert(Item(Input(S15, ' '), Result(SE, O15)));
	M.insert(Item(Input(S15, '\n'), Result(SE, O15)));
	M.insert(Item(Input(S15, '*'), Result(SE, O15)));
	M.insert(Item(Input(S15, '-'), Result(SE, O15)));
	M.insert(Item(Input(S15, '+'), Result(SE, O15)));
	M.insert(Item(Input(S15, '/'), Result(SE, O15)));
	M.insert(Item(Input(S15, '='), Result(SE, O15)));
	M.insert(Item(Input(S15, '<'), Result(SE, O15)));
	M.insert(Item(Input(S15, '>'), Result(SE, O15)));
	M.insert(Item(Input(S15, ','), Result(SE, O15)));
	M.insert(Item(Input(S15, ';'), Result(SE, O15)));
	M.insert(Item(Input(S15, ':'), Result(SE, O15)));
	M.insert(Item(Input(S15, '('), Result(SE, O15)));
	M.insert(Item(Input(S15, ')'), Result(SE, O15)));

	M.insert(Item(Input(S16, 'a'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'b'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'c'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'd'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'e'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'f'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'g'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'h'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'i'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'j'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'k'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'l'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'm'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'n'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'o'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'p'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'q'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'r'), Result(SE, O16)));
	M.insert(Item(Input(S16, 's'), Result(SE, O16)));
	M.insert(Item(Input(S16, 't'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'u'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'v'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'w'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'x'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'y'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'z'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'A'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'B'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'C'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'D'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'E'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'F'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'G'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'H'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'I'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'J'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'K'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'L'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'M'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'N'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'O'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'P'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'Q'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'R'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'S'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'T'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'U'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'V'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'W'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'X'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'Y'), Result(SE, O16)));
	M.insert(Item(Input(S16, 'Z'), Result(SE, O16)));
	M.insert(Item(Input(S16, '0'), Result(SE, O16)));
	M.insert(Item(Input(S16, '1'), Result(SE, O16)));
	M.insert(Item(Input(S16, '2'), Result(SE, O16)));
	M.insert(Item(Input(S16, '3'), Result(SE, O16)));
	M.insert(Item(Input(S16, '4'), Result(SE, O16)));
	M.insert(Item(Input(S16, '5'), Result(SE, O16)));
	M.insert(Item(Input(S16, '6'), Result(SE, O16)));
	M.insert(Item(Input(S16, '7'), Result(SE, O16)));
	M.insert(Item(Input(S16, '8'), Result(SE, O16)));
	M.insert(Item(Input(S16, '9'), Result(SE, O16)));
	M.insert(Item(Input(S16, ' '), Result(SE, O16)));
	M.insert(Item(Input(S16, '\n'), Result(SE, O16)));
	M.insert(Item(Input(S16, '*'), Result(SE, O16)));
	M.insert(Item(Input(S16, '-'), Result(SE, O16)));
	M.insert(Item(Input(S16, '+'), Result(SE, O16)));
	M.insert(Item(Input(S16, '/'), Result(SE, O16)));
	M.insert(Item(Input(S16, '='), Result(SE, O16)));
	M.insert(Item(Input(S16, '<'), Result(SE, O16)));
	M.insert(Item(Input(S16, '>'), Result(SE, O16)));
	M.insert(Item(Input(S16, ','), Result(SE, O16)));
	M.insert(Item(Input(S16, ';'), Result(SE, O16)));
	M.insert(Item(Input(S16, ':'), Result(SE, O16)));
	M.insert(Item(Input(S16, '('), Result(SE, O16)));
	M.insert(Item(Input(S16, ')'), Result(SE, O16)));
	
	M.insert(Item(Input(S17, 'a'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'b'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'c'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'd'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'e'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'f'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'g'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'h'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'i'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'j'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'k'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'l'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'm'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'n'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'o'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'p'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'q'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'r'), Result(SE, O17)));
	M.insert(Item(Input(S17, 's'), Result(SE, O17)));
	M.insert(Item(Input(S17, 't'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'u'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'v'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'w'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'x'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'y'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'z'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'A'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'B'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'C'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'D'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'E'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'F'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'G'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'H'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'I'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'J'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'K'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'L'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'M'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'N'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'O'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'P'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'Q'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'R'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'S'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'T'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'U'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'V'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'W'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'X'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'Y'), Result(SE, O17)));
	M.insert(Item(Input(S17, 'Z'), Result(SE, O17)));
	M.insert(Item(Input(S17, '0'), Result(SE, O17)));
	M.insert(Item(Input(S17, '1'), Result(SE, O17)));
	M.insert(Item(Input(S17, '2'), Result(SE, O17)));
	M.insert(Item(Input(S17, '3'), Result(SE, O17)));
	M.insert(Item(Input(S17, '4'), Result(SE, O17)));
	M.insert(Item(Input(S17, '5'), Result(SE, O17)));
	M.insert(Item(Input(S17, '6'), Result(SE, O17)));
	M.insert(Item(Input(S17, '7'), Result(SE, O17)));
	M.insert(Item(Input(S17, '8'), Result(SE, O17)));
	M.insert(Item(Input(S17, '9'), Result(SE, O17)));
	M.insert(Item(Input(S17, ' '), Result(SE, O17)));
	M.insert(Item(Input(S17, '\n'), Result(SE, O17)));
	M.insert(Item(Input(S17, '*'), Result(SE, O17)));
	M.insert(Item(Input(S17, '-'), Result(SE, O17)));
	M.insert(Item(Input(S17, '+'), Result(SE, O17)));
	M.insert(Item(Input(S17, '/'), Result(SE, O17)));
	M.insert(Item(Input(S17, '='), Result(SE, O17)));
	M.insert(Item(Input(S17, '<'), Result(SE, O17)));
	M.insert(Item(Input(S17, '>'), Result(SE, O17)));
	M.insert(Item(Input(S17, ','), Result(SE, O17)));
	M.insert(Item(Input(S17, ';'), Result(SE, O17)));
	M.insert(Item(Input(S17, ':'), Result(SE, O17)));
	M.insert(Item(Input(S17, '('), Result(SE, O17)));
	M.insert(Item(Input(S17, ')'), Result(SE, O17)));

	M.insert(Item(Input(S18, 'a'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'b'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'c'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'd'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'e'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'f'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'g'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'h'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'i'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'j'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'k'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'l'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'm'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'n'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'o'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'p'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'q'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'r'), Result(SE, O18)));
	M.insert(Item(Input(S18, 's'), Result(SE, O18)));
	M.insert(Item(Input(S18, 't'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'u'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'v'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'w'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'x'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'y'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'z'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'A'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'B'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'C'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'D'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'E'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'F'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'G'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'H'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'I'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'J'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'K'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'L'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'M'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'N'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'O'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'P'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'Q'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'R'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'S'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'T'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'U'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'V'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'W'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'X'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'Y'), Result(SE, O18)));
	M.insert(Item(Input(S18, 'Z'), Result(SE, O18)));
	M.insert(Item(Input(S18, '0'), Result(SE, O18)));
	M.insert(Item(Input(S18, '1'), Result(SE, O18)));
	M.insert(Item(Input(S18, '2'), Result(SE, O18)));
	M.insert(Item(Input(S18, '3'), Result(SE, O18)));
	M.insert(Item(Input(S18, '4'), Result(SE, O18)));
	M.insert(Item(Input(S18, '5'), Result(SE, O18)));
	M.insert(Item(Input(S18, '6'), Result(SE, O18)));
	M.insert(Item(Input(S18, '7'), Result(SE, O18)));
	M.insert(Item(Input(S18, '8'), Result(SE, O18)));
	M.insert(Item(Input(S18, '9'), Result(SE, O18)));
	M.insert(Item(Input(S18, ' '), Result(SE, O18)));
	M.insert(Item(Input(S18, '\n'), Result(SE, O18)));
	M.insert(Item(Input(S18, '*'), Result(SE, O18)));
	M.insert(Item(Input(S18, '-'), Result(SE, O18)));
	M.insert(Item(Input(S18, '+'), Result(SE, O18)));
	M.insert(Item(Input(S18, '/'), Result(SE, O18)));
	M.insert(Item(Input(S18, '='), Result(SE, O18)));
	M.insert(Item(Input(S18, '<'), Result(SE, O18)));
	M.insert(Item(Input(S18, '>'), Result(SE, O18)));
	M.insert(Item(Input(S18, ','), Result(SE, O18)));
	M.insert(Item(Input(S18, ';'), Result(SE, O18)));
	M.insert(Item(Input(S18, ':'), Result(SE, O18)));
	M.insert(Item(Input(S18, '('), Result(SE, O18)));
	M.insert(Item(Input(S18, ')'), Result(SE, O18)));

	M.insert(Item(Input(S19, 'a'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'b'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'c'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'd'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'e'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'f'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'g'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'h'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'i'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'j'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'k'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'l'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'm'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'n'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'o'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'p'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'q'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'r'), Result(SE, O19)));
	M.insert(Item(Input(S19, 's'), Result(SE, O19)));
	M.insert(Item(Input(S19, 't'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'u'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'v'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'w'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'x'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'y'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'z'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'A'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'B'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'C'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'D'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'E'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'F'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'G'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'H'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'I'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'J'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'K'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'L'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'M'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'N'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'O'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'P'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'Q'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'R'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'S'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'T'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'U'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'V'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'W'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'X'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'Y'), Result(SE, O19)));
	M.insert(Item(Input(S19, 'Z'), Result(SE, O19)));
	M.insert(Item(Input(S19, '0'), Result(SE, O19)));
	M.insert(Item(Input(S19, '1'), Result(SE, O19)));
	M.insert(Item(Input(S19, '2'), Result(SE, O19)));
	M.insert(Item(Input(S19, '3'), Result(SE, O19)));
	M.insert(Item(Input(S19, '4'), Result(SE, O19)));
	M.insert(Item(Input(S19, '5'), Result(SE, O19)));
	M.insert(Item(Input(S19, '6'), Result(SE, O19)));
	M.insert(Item(Input(S19, '7'), Result(SE, O19)));
	M.insert(Item(Input(S19, '8'), Result(SE, O19)));
	M.insert(Item(Input(S19, '9'), Result(SE, O19)));
	M.insert(Item(Input(S19, ' '), Result(SE, O19)));
	M.insert(Item(Input(S19, '\n'), Result(SE, O19)));
	M.insert(Item(Input(S19, '*'), Result(SE, O19)));
	M.insert(Item(Input(S19, '-'), Result(SE, O19)));
	M.insert(Item(Input(S19, '+'), Result(SE, O19)));
	M.insert(Item(Input(S19, '/'), Result(SE, O19)));
	M.insert(Item(Input(S19, '='), Result(SE, O19)));
	M.insert(Item(Input(S19, '<'), Result(SE, O19)));
	M.insert(Item(Input(S19, '>'), Result(SE, O19)));
	M.insert(Item(Input(S19, ','), Result(SE, O19)));
	M.insert(Item(Input(S19, ';'), Result(SE, O19)));
	M.insert(Item(Input(S19, ':'), Result(SE, O19)));
	M.insert(Item(Input(S19, '('), Result(SE, O19)));
	M.insert(Item(Input(S19, ')'), Result(SE, O19)));

	M.insert(Item(Input(S20, 'a'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'b'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'c'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'd'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'e'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'f'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'g'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'h'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'i'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'j'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'k'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'l'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'm'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'n'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'o'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'p'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'q'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'r'), Result(SE, O20)));
	M.insert(Item(Input(S20, 's'), Result(SE, O20)));
	M.insert(Item(Input(S20, 't'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'u'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'v'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'w'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'x'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'y'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'z'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'A'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'B'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'C'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'D'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'E'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'F'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'G'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'H'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'I'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'J'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'K'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'L'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'M'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'N'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'O'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'P'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'Q'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'R'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'S'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'T'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'U'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'V'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'W'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'X'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'Y'), Result(SE, O20)));
	M.insert(Item(Input(S20, 'Z'), Result(SE, O20)));
	M.insert(Item(Input(S20, '0'), Result(SE, O20)));
	M.insert(Item(Input(S20, '1'), Result(SE, O20)));
	M.insert(Item(Input(S20, '2'), Result(SE, O20)));
	M.insert(Item(Input(S20, '3'), Result(SE, O20)));
	M.insert(Item(Input(S20, '4'), Result(SE, O20)));
	M.insert(Item(Input(S20, '5'), Result(SE, O20)));
	M.insert(Item(Input(S20, '6'), Result(SE, O20)));
	M.insert(Item(Input(S20, '7'), Result(SE, O20)));
	M.insert(Item(Input(S20, '8'), Result(SE, O20)));
	M.insert(Item(Input(S20, '9'), Result(SE, O20)));
	M.insert(Item(Input(S20, ' '), Result(SE, O20)));
	M.insert(Item(Input(S20, '\n'), Result(SE, O20)));
	M.insert(Item(Input(S20, '*'), Result(SE, O20)));
	M.insert(Item(Input(S20, '-'), Result(SE, O20)));
	M.insert(Item(Input(S20, '+'), Result(SE, O20)));
	M.insert(Item(Input(S20, '/'), Result(SE, O20)));
	M.insert(Item(Input(S20, '='), Result(SE, O20)));
	M.insert(Item(Input(S20, '<'), Result(SE, O20)));
	M.insert(Item(Input(S20, '>'), Result(SE, O20)));
	M.insert(Item(Input(S20, ','), Result(SE, O20)));
	M.insert(Item(Input(S20, ';'), Result(SE, O20)));
	M.insert(Item(Input(S20, ':'), Result(SE, O20)));
	M.insert(Item(Input(S20, '('), Result(SE, O20)));
	M.insert(Item(Input(S20, ')'), Result(SE, O20)));

	M.insert(Item(Input(S21, 'a'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'b'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'c'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'd'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'e'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'f'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'g'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'h'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'i'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'j'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'k'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'l'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'm'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'n'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'o'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'p'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'q'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'r'), Result(S21, O21)));
	M.insert(Item(Input(S21, 's'), Result(S21, O21)));
	M.insert(Item(Input(S21, 't'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'u'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'v'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'w'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'x'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'y'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'z'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'A'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'B'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'C'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'D'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'E'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'F'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'G'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'H'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'I'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'J'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'K'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'L'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'M'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'N'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'O'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'P'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'Q'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'R'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'S'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'T'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'U'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'V'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'W'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'X'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'Y'), Result(S21, O21)));
	M.insert(Item(Input(S21, 'Z'), Result(S21, O21)));
	M.insert(Item(Input(S21, '0'), Result(SE, OE)));
	M.insert(Item(Input(S21, '1'), Result(SE, OE)));
	M.insert(Item(Input(S21, '2'), Result(SE, OE)));
	M.insert(Item(Input(S21, '3'), Result(SE, OE)));
	M.insert(Item(Input(S21, '4'), Result(SE, OE)));
	M.insert(Item(Input(S21, '5'), Result(SE, OE)));
	M.insert(Item(Input(S21, '6'), Result(SE, OE)));
	M.insert(Item(Input(S21, '7'), Result(SE, OE)));
	M.insert(Item(Input(S21, '8'), Result(SE, OE)));
	M.insert(Item(Input(S21, '9'), Result(SE, OE)));
	M.insert(Item(Input(S21, ' '), Result(SE, OE)));
	M.insert(Item(Input(S21, '\n'), Result(SE, OE)));
	M.insert(Item(Input(S21, '*'), Result(SE, OE)));
	M.insert(Item(Input(S21, '-'), Result(SE, OE)));
	M.insert(Item(Input(S21, '+'), Result(SE, OE)));
	M.insert(Item(Input(S21, '/'), Result(SE, OE)));
	M.insert(Item(Input(S21, '='), Result(SE, OE)));
	M.insert(Item(Input(S21, '<'), Result(SE, OE)));
	M.insert(Item(Input(S21, '>'), Result(SE, OE)));
	M.insert(Item(Input(S21, ','), Result(SE, OE)));
	M.insert(Item(Input(S21, ';'), Result(SE, OE)));
	M.insert(Item(Input(S21, ':'), Result(SE, OE)));
	M.insert(Item(Input(S21, '('), Result(SE, OE)));
	M.insert(Item(Input(S21, ')'), Result(SE, OE)));
	M.insert(Item(Input(S21, '.'), Result(SE, O21)));


}

Lex::Lex(const char*fname) //Конструктор принимает на вход имя файла с входной цепочкой
{
	_current_token_index = 0;
	_file.open(fname); // Пытаемся открыть файл в поток
		if (!_file) throw LexErr("Ошибка открытия фай-ла"); //Если неудача, возбуждаем исключительную ситуацию
			_file.unsetf(ios::skipws);
}

Lex::~Lex()
{
	_file.close(); //Деструктор закрывает файловый поток
}

string toup(string s)
{
	string tmp(s);
	for (int i = 0; i < s.length(); i++)
		if (tmp[i] >= 'a' && tmp[i] != '.')
			tmp[i] -= 'a' - 'A';
	return tmp;
}

bool Lex::GetToken(Token &token)
{
	Statement current = S0; //Начальное состояние- S0 
	TokenType type;
	string value;
	Result res;
	char c;
	map<Input, Result>::const_iterator it;
	while (!_file.eof()) //Пока не конец файла
	{
		if (!_file.get(c)) // Получаем очередной символ
			return false;
		it = M.find(Input(current, c)); // Пытаемся	найти ячейку таблицы, соответствующую ключу Текущее	Состояние current, Входной Символ с
		if (it == M.end()) 
			throw LexErr("Некорректный символ" + c); // Если такой ячейки нет, возбуждаем исключительную ситуацию
		res = it->second; // Получаем пару(Новое Состояние& Выходной сигнал)
		if (res.second == OE)  
			throw LexErr("Лексическая ошибка"); // Если выходной сигналO11 - ошибка
		if (res.first == SE || _file.peek() <= 0)//Если следующее состояние финальное или"виден" конец файла	
		{
			if (res.first != SE || c == '.') //Текущее состояние финальное
			{
				value += c;
			}
			switch (res.second) //Выходной сигнал
			{
			case O0:
				type = SPACE;
				return false;
			case O1:
				value = toup(value);
			//
				if (value == "CYCLE")
					type = CYCLE;
				else if (value == "DIMENSION")
					type = DIMENSION;
				else if (value == "END")
					type = END;
				else if (value == "PROGRAM")
					type = PROGRAM;
				else if (value == "RECURSIVE")
					type = RECURSIVE;
				else if (value == "STOP")
					type = STOP;
				else if (value == "THEN")
					type = THEN;
				else if (value == "WHILE")
					type = WHILE;
				else if (value == "DO")
					type = DO;
				else if (value == "FUNCTION")
					type = FUNCTION;
				else if (value == "PRINT")
					type = PRINT;
				else if (value == "READ")
					type = READ;
				else if (value == "WRITE")
					type = WRITE;
				else if (value == "CHARACTER")
					type = CHARACTER;
				else if (value == "DOUBLE")
					type = DOUBLE;
				else if (value == "EXIT")
					type = EXIT;
				else if (value == "PARAMETER")
					type = PARAMETER;
				else if (value == "PRECISION")
					type = PRECISION;
				else if (value == "REAL")
					type = REAL;
				else if (value == "CONTINUE")
					type = CONTINUE;
				else if (value == "ELSE")
					type = ELSE;
				else if (value == "END")
					type = END;
				else if (value == "IF")
					type = IF;
				else if (value == "INTEGER")
					type = INTEGER;
				else if (value == "LOGICAL")
					type = LOGICAL;
				else if (value == "RESULT")
					type = RESULT;
				else if (value == "SUBROUTINE")
					type = SUBROUTINE;
				else if (value == "IN")
					type = IN;
				else if (value == "OUT")
					type = OUT;
				else if (value == "CALL")
					type = CALL;
				else if (value == "SQRT")
					type = SQRT;
				else if (value == "INTENT")
					type = INTENT;
				else if (value == "RETURN")
					type = RETURN;
				else
					type = IDENT;
				break;
			case O2:
				type = INT;
				break;
			case O3:
				type = FLOAT;
				break;
			case O4:
				type = PLUS;
				break;
			case O5:
				type = MINUS;
				break;
			case O6:
				type = MULTIPLE;
				break;
			case O7:
				type = POW;
				break;
			case O8:
				type = DIVISION;
				break;
			case O9:
				type = NOTEQ;
				break;
			case O10:
				type = EQUAL;
				break;
			case O11:
				type = EQEQ;
				break;
			case O12:
				type = LESS;
				break;
			case O13:
				type = LESSEQ;
				break;
			case O14:
				type = MORE;
				break;
			case O15:
				type = MOREEQ;
				break;
			case O16:
				type = COMMA;
				break;
			case O17:
				type = SEPARATOR;
				break;
			case O18:
				type = DDOT;
				break;
			case O19:
				type = LPAR;
				break;
			case O20:
				type = RPAR;
				break;
			case O21:
				value = toup(value);
				if (value == ".NOT.")
					type = NOT;
				else if (value == ".AND.")
					type = AND;
				else if (value == ".OR.")
					type = OR;
				else if (value == ".XOR.")
					type = XOR;
				else if (value == ".EQV.")
					type = EQV;
				else if (value == ".NEQV.")
					type = NEQV;
				else if (value == ".TRUE.")
					type = TRUE;
				else if (value == ".FALSE.")
					type = FALSE;
				else if (value == ".EQ.")
					type = EQ;
				else if (value == ".NE.")
					type = NE;
				else if (value == ".GT.")
					type = GT;
				else if (value == ".GE.")
					type = GE;
				else if (value == ".LT.")
					type = LT;
				else if (value == ".LE.")
					type = LE;
				else 
					throw LexErr("Лексическая ошибка");
				break;
			default:
				throw LexErr("Лексическая ошибка");
			}
			// Формируем лексему
			token._type = type;
			token._value = value;//trim(value);

			if(!_file.eof() && c != '.')
				_file.seekg(-1, ios::cur);  //"Возвращаем захваченный нами лишний символ" 
				return true;
		}
		current = res.first; // Меняем текущее состояние
		if(c != 32 && c != '\n')
			value += c;  //Накапливаем строковое значение
	}
return false;
}

void Lex::split()
{
	Token token;
	setlocale(LC_ALL, "RUS");
	while (this->GetToken(token))
	{
		this->_tokens.push_back(token);
		
		//cout << "Лексемма: '" << token._value << "' " << "Тип   " << token._type << endl;
	}
	Token tokenFinal;
	tokenFinal._type = TokenType::NUL;
	string str = "NUL";
	tokenFinal._value = str;
	this->_tokens.push_back(tokenFinal);
}